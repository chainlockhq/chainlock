/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "firstPendingMember",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "secretId",
        type: "uint256",
      },
    ],
    name: "SecretCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addPendingMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnEncryptedPrivateKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnSecretIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getPublicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secretId",
        type: "uint256",
      },
    ],
    name: "getSecret",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "publicLabel",
            type: "string",
          },
          {
            internalType: "string",
            name: "encryptedUsername",
            type: "string",
          },
          {
            internalType: "string",
            name: "encryptedPassword",
            type: "string",
          },
        ],
        internalType: "struct Vault.Secret",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "encryptedPrivateKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "joinVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "string",
        name: "encryptedPrivateKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingMembers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secretId",
        type: "uint256",
      },
    ],
    name: "secretExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "secrets",
    outputs: [
      {
        internalType: "string",
        name: "publicLabel",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedUsername",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedPassword",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "publicLabel",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedUsername",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedPassword",
        type: "string",
      },
    ],
    name: "storeSecret",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1d38038062001c1d8339818101604052810190620000379190620000ff565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505062000131565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000c7826200009a565b9050919050565b620000d981620000ba565b8114620000e557600080fd5b50565b600081519050620000f981620000ce565b92915050565b60006020828403121562000118576200011762000095565b5b60006200012884828501620000e8565b91505092915050565b611adc80620001416000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a77dcfec11610071578063a77dcfec146101da578063ba95040a146101f8578063de9702a414610214578063e833540514610246578063fb26293a14610276578063fc23524f14610292576100b4565b806308ae4b0c146100b95780631af9cba0146100ea578063574bb68f1461011a578063857cdbb81461014a5780638d17664d1461017a578063a230c524146101aa575b600080fd5b6100d360048036038101906100ce9190611296565b6102b0565b6040516100e192919061135c565b60405180910390f35b61010460048036038101906100ff9190611296565b6103e4565b60405161011191906113ae565b60405180910390f35b610134600480360381019061012f91906113ff565b610404565b60405161014191906113ae565b60405180910390f35b610164600480360381019061015f9190611296565b610415565b604051610171919061142c565b60405180910390f35b610194600480360381019061018f91906113ff565b610531565b6040516101a191906114f6565b60405180910390f35b6101c460048036038101906101bf9190611296565b61076d565b6040516101d191906113ae565b60405180910390f35b6101e26107c7565b6040516101ef91906115d6565b60405180910390f35b610212600480360381019061020d9190611296565b6108a7565b005b61022e600480360381019061022991906113ff565b610949565b60405161023d939291906115f8565b60405180910390f35b610260600480360381019061025b91906116a9565b610b1b565b60405161026d919061176c565b60405180910390f35b610290600480360381019061028b9190611787565b610d96565b005b61029a611003565b6040516102a7919061142c565b60405180910390f35b60016020528060005260406000206000915090508060000180546102d390611837565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff90611837565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b50505050509080600101805461036190611837565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90611837565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b5050505050905082565b60006020528060005260406000206000915054906101000a900460ff1681565b600060028054905082109050919050565b60606104203361076d565b61045f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610456906118b5565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180546104ac90611837565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890611837565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b50505050509050919050565b61053961111d565b8161054381610404565b610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057990611921565b60405180910390fd5b6002838154811061059657610595611941565b5b90600052602060002090600302016040518060600160405290816000820180546105bf90611837565b80601f01602080910402602001604051908101604052809291908181526020018280546105eb90611837565b80156106385780601f1061060d57610100808354040283529160200191610638565b820191906000526020600020905b81548152906001019060200180831161061b57829003601f168201915b5050505050815260200160018201805461065190611837565b80601f016020809104026020016040519081016040528092919081815260200182805461067d90611837565b80156106ca5780601f1061069f576101008083540402835291602001916106ca565b820191906000526020600020905b8154815290600101906020018083116106ad57829003601f168201915b505050505081526020016002820180546106e390611837565b80601f016020809104026020016040519081016040528092919081815260200182805461070f90611837565b801561075c5780601f106107315761010080835404028352916020019161075c565b820191906000526020600020905b81548152906001019060200180831161073f57829003601f168201915b505050505081525050915050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180546107bd90611837565b9050119050919050565b60606107d23361076d565b610811576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610808906118b5565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561089d57602002820191906000526020600020905b815481526020019060010190808311610889575b5050505050905090565b6108b03361076d565b6108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e6906118b5565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6002818154811061095957600080fd5b906000526020600020906003020160009150905080600001805461097c90611837565b80601f01602080910402602001604051908101604052809291908181526020018280546109a890611837565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b505050505090806001018054610a0a90611837565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3690611837565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505090806002018054610a9890611837565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490611837565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b5050505050905083565b6000610b263361076d565b610b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5c906118b5565b60405180910390fd5b6002604051806060016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019080519060200190610c9392919061113e565b506020820151816001019080519060200190610cb092919061113e565b506040820151816002019080519060200190610ccd92919061113e565b50505060006001600280549050610ce4919061199f565b9050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190806001815401808255809150506001900390600052602060002001600090919091909150557f2187d27271839d51dd71708ec1d488a754668a8228c434be1934e2aeee633cf63382604051610d809291906119e2565b60405180910390a1809150509695505050505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1890611a57565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550604051806060016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600067ffffffffffffffff811115610f3257610f31611a77565b5b604051908082528060200260200182016040528015610f605781602001602082028036833780820191505090505b50815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610fbf92919061113e565b506020820151816001019080519060200190610fdc92919061113e565b506040820151816002019080519060200190610ff99291906111c4565b5090505050505050565b606061100e3361076d565b61104d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611044906118b5565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461109a90611837565b80601f01602080910402602001604051908101604052809291908181526020018280546110c690611837565b80156111135780601f106110e857610100808354040283529160200191611113565b820191906000526020600020905b8154815290600101906020018083116110f657829003601f168201915b5050505050905090565b60405180606001604052806060815260200160608152602001606081525090565b82805461114a90611837565b90600052602060002090601f01602090048101928261116c57600085556111b3565b82601f1061118557805160ff19168380011785556111b3565b828001600101855582156111b3579182015b828111156111b2578251825591602001919060010190611197565b5b5090506111c09190611211565b5090565b828054828255906000526020600020908101928215611200579160200282015b828111156111ff5782518255916020019190600101906111e4565b5b50905061120d9190611211565b5090565b5b8082111561122a576000816000905550600101611212565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061126382611238565b9050919050565b61127381611258565b811461127e57600080fd5b50565b6000813590506112908161126a565b92915050565b6000602082840312156112ac576112ab61122e565b5b60006112ba84828501611281565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112fd5780820151818401526020810190506112e2565b8381111561130c576000848401525b50505050565b6000601f19601f8301169050919050565b600061132e826112c3565b61133881856112ce565b93506113488185602086016112df565b61135181611312565b840191505092915050565b600060408201905081810360008301526113768185611323565b9050818103602083015261138a8184611323565b90509392505050565b60008115159050919050565b6113a881611393565b82525050565b60006020820190506113c3600083018461139f565b92915050565b6000819050919050565b6113dc816113c9565b81146113e757600080fd5b50565b6000813590506113f9816113d3565b92915050565b6000602082840312156114155761141461122e565b5b6000611423848285016113ea565b91505092915050565b600060208201905081810360008301526114468184611323565b905092915050565b600082825260208201905092915050565b600061146a826112c3565b611474818561144e565b93506114848185602086016112df565b61148d81611312565b840191505092915050565b600060608301600083015184820360008601526114b5828261145f565b915050602083015184820360208601526114cf828261145f565b915050604083015184820360408601526114e9828261145f565b9150508091505092915050565b600060208201905081810360008301526115108184611498565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61154d816113c9565b82525050565b600061155f8383611544565b60208301905092915050565b6000602082019050919050565b600061158382611518565b61158d8185611523565b935061159883611534565b8060005b838110156115c95781516115b08882611553565b97506115bb8361156b565b92505060018101905061159c565b5085935050505092915050565b600060208201905081810360008301526115f08184611578565b905092915050565b600060608201905081810360008301526116128186611323565b905081810360208301526116268185611323565b9050818103604083015261163a8184611323565b9050949350505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261166957611668611644565b5b8235905067ffffffffffffffff81111561168657611685611649565b5b6020830191508360018202830111156116a2576116a161164e565b5b9250929050565b600080600080600080606087890312156116c6576116c561122e565b5b600087013567ffffffffffffffff8111156116e4576116e3611233565b5b6116f089828a01611653565b9650965050602087013567ffffffffffffffff81111561171357611712611233565b5b61171f89828a01611653565b9450945050604087013567ffffffffffffffff81111561174257611741611233565b5b61174e89828a01611653565b92509250509295509295509295565b611766816113c9565b82525050565b6000602082019050611781600083018461175d565b92915050565b600080600080604085870312156117a1576117a061122e565b5b600085013567ffffffffffffffff8111156117bf576117be611233565b5b6117cb87828801611653565b9450945050602085013567ffffffffffffffff8111156117ee576117ed611233565b5b6117fa87828801611653565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061184f57607f821691505b6020821081141561186357611862611808565b5b50919050565b7f73656e646572206e6f742061206d656d62657200000000000000000000000000600082015250565b600061189f6013836112ce565b91506118aa82611869565b602082019050919050565b600060208201905081810360008301526118ce81611892565b9050919050565b7f73656372657420646f6573206e6f742065786973740000000000000000000000600082015250565b600061190b6015836112ce565b9150611916826118d5565b602082019050919050565b6000602082019050818103600083015261193a816118fe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119aa826113c9565b91506119b5836113c9565b9250828210156119c8576119c7611970565b5b828203905092915050565b6119dc81611258565b82525050565b60006040820190506119f760008301856119d3565b611a04602083018461175d565b9392505050565b7f73656e646572206e6f7420612070656e64696e67206d656d6265720000000000600082015250565b6000611a41601b836112ce565b9150611a4c82611a0b565b602082019050919050565b60006020820190508181036000830152611a7081611a34565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220b1846e7767a13321b2b2f3b4ec55197364cd7c94739eb26b093a3ace4b62655d64736f6c63430008090033";

export class Vault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    firstPendingMember: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vault> {
    return super.deploy(firstPendingMember, overrides || {}) as Promise<Vault>;
  }
  getDeployTransaction(
    firstPendingMember: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(firstPendingMember, overrides || {});
  }
  attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
